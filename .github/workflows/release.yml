name: Release

on: workflow_dispatch

jobs:
  release:
    name: Release and publish a new project version
    runs-on: ubuntu-latest
    steps:
      # The credentials from the GitHub runner are not useful here,
      # because we need to push to a restricted branch,
      # so maintainer access is required.
      # We also need to fetch the entire commit history because lerna builds a change log out of commit messages.
      # More information:
      # https://www.conventionalcommits.org/en/v1.0.0/
      # https://github.com/lerna/lerna/tree/main/commands/version
      - name: Checkout ðŸ“¥
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Setup Node ðŸ’¿
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14

        # To push to the parent repository, git need a short setup workflow.
        # The user who has triggered the workflow in the actions tab
        # also "commits" the changelog and package.json updates.
        # We also need to re-set the origin URL,
        # because we make use of the pushing to GitHub repositories
        # via an access token.
      - name: Setup git
        run: |
          git config --local user.name "${GITHUB_ACTOR}"
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote set-url origin "https://${GITHUB_ACTOR}:${GH_RELEASE_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          echo "Git remote origin URL: $(git remote get-url origin)"
        env:
          GH_RELEASE_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
      - name: Install lerna globally
        run: npm i -g lerna
      - name: Install development dependencies
        run: npm ci
      - name: Add node_modules binaries to path
        run: echo "${GITHUB_WORKSPACE}/node_modules/.bin" >> $GITHUB_PATH

        # Lerna will create the change log from the conventional commits,
        # increase to the necessary package version and push its changes.
        # Additionally it generates a github release
        # which also includes the current change log.
      - name: Lerna version and GitHub release
        run: lerna version --conventional-commits --create-release github --yes
        env:
          GH_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}

        # Build a .npmrc configuration file
        # that will be used from npm and lerna
        # to publish to the npm registry with the given token.
      - name: Setup npm
        run: |
          touch "${GITHUB_WORKSPACE}/.npmrc"
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > "${GITHUB_WORKSPACE}/.npmrc"
          cat "${GITHUB_WORKSPACE}/.npmrc"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish to npm registry
        # Skip access verification to circumvent lerna calling 'npm whoami'
        # because we are not logged in with npm and use the npm token method instead.
        run: lerna publish from-git --no-verify-access --yes
