name: Test

# Events that trigger this workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Defines which tool versions should be used in all workflow jobs
env:
  # node: 16 # matrix build, see below
  pnpm: '7'

jobs:
  cli-e2e-test:
    name: E2E CLI on Node v${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['16', '18']
    steps:
      - name: Checkout 📥
        uses: actions/checkout@v3.5.3
      - name: Setup PNPM 💿
        uses: pnpm/action-setup@v2.3.0
        with:
          version: ${{ env.pnpm }}
      - name: Setup Node 💿
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.node }}
      - name: Setup git ⚙
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Install dependencies 📚
        run: pnpm install

      - name: Run verdaccio 💡
        run: |
          pnpm dlx verdaccio &
          sleep 10
          printf 'Set pnpm registry...\n'
          npm config set registry "http://localhost:4873/"
          printf 'pnpm registry (global): %s\n' "$(pnpm config --global get registry)"
          printf 'pnpm registry (local):  %s\n' "$(pnpm config get registry)"

      - name: Login to verdaccio 🛂
        run: |
          pnpm dlx npm-cli-adduser --username thebox --password where --email 'thebox@nothere.com' --registry 'http://localhost:4873'
          printf 'pnpm whoami: %s\n' "$(pnpm whoami)"

      - name: Bump version numbers to defeat caching
        run: |
          sed -i 's/"version": ".*"/"version": "999.999.999"/g' package.json packages/*/package.json
      - name: Build 🏗
        run: pnpm build
      - name: Publish to verdaccio 📤
        run: pnpm publish -r --no-git-checks
      - name: Install CLI from verdaccio 🪤
        run: pnpm add --global @wuespace/telestion-client-cli@999.999.999
        continue-on-error: true
      - name: Show help output of CLI
        run: tc-cli --help
      - name: Initialize PSC Project 🛒
        working-directory: '../../'
        run: tc-cli init psc

      - name: Generate a new widget in the PSC 🛠
        working-directory: '../../psc'
        run: |
          tc-cli generate --help
          tc-cli generate widget test-widget
      - name: Show stats of the PSC 🖨
        working-directory: '../../psc'
        run: |
          tc-cli stats --help
          tc-cli stats
      - name: Build the PSC 📦
        working-directory: '../../psc'
        run: |
          tc-cli build --help
          tc-cli build
      - name: Run E2E test 🛃
        working-directory: '../../psc'
        run: pnpm test:e2e
